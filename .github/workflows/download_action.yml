name: Translation To GitHub
on:
  issues:
    types: [opened]
  schedule:
    - cron: "0 16,4 * * *"
  workflow_dispatch:

jobs:
  check-issue:
    if: contains(github.event.issue.labels.*.name, '自动化:paratranz→Github') && github.event_name != 'schedule'
    name: Check Issue
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Issue Check
        run: |
          echo "检测成功：${{ github.event.issue.labels.*.name }}"

  Translation-To-GitHub:
    name: Translation To GitHub
    runs-on: ubuntu-latest
    if: contains(github.event.issue.labels.*.name, '自动化:paratranz→Github') || github.event_name == 'schedule'
    environment: PARATRANZ_ENV
    env:
      API_TOKEN: ${{ secrets.API_KEY }}
      FILE_PATH: ./
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PROJECT_ID: ${{ vars.ID }}
      GIT_PATH: ${{ vars.G_PATH }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install dependencies
        run: |
          pip install PyGithub requests
      - name: Configure Git
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "VM[BOT]"
          git config --global pull.rebase false
      - name: Initialize and Checkout Branch
        run: |
          git init
          git fetch origin
          git checkout -b develop origin/develop || git checkout develop
          git reset --hard origin/main
      - name: Paratranz To zh_cn
        run: |
          python .github/workflows/translation2github.py
      - name: Upload To develop
        run: |
          git add .
          if [[ -n $(git status -s) ]]; then
            echo '译文更改'
            git commit -m 'paratranz上传'
            git pull origin develop --allow-unrelated-histories || true
            git push origin develop --force || {
              echo '解决冲突并继续'
              git merge --abort
              exit 1
            }
            gh pr create --title 'paratranz上传' --body '自动PR'
            sleep 1
            gh pr merge develop --merge
            git checkout main
            git branch -D develop
            git push origin --delete develop
          else
            echo '译文未更改'
            git checkout main
            git branch -D develop
            git push origin --delete develop
          fi

  close-issue:
    name: Close Issue
    needs: check-issue
    runs-on: ubuntu-latest
    steps:
      - name: Close Issue
        uses: peter-evans/close-issue@v3
        with:
          comment: |
            同步完成，Issue已自动关闭。

  release:
    runs-on: ubuntu-latest
    needs: Translation-To-GitHub
    name: Build and Release
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Create ZIP file
        id: create_zip
        run: |
          cd CNPack
          zip -r release.zip ./*
          mv release.zip ../release.zip
  
      - name: Rename ZIP file with build time
        id: rename_zip
        run: |
          TIMESTAMP=$(date +'%Y-%m-%d_%H-%M')
          mv ../release.zip ../快照-$TIMESTAMP.zip
        shell: bash

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_id }}
          release_name: 自动构建 ${TIMESTAMP}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ../快照-${{ steps.rename_zip.outputs.TIMESTAMP }}.zip
          asset_name: 快照-${{ steps.rename_zip.outputs.TIMESTAMP }}.zip
          asset_content_type: application/zip